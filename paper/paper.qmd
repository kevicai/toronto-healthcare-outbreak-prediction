---
title: "Understanding the Factors Influencing Outbreak Duration in Toronto Healthcare Institutions"
subtitle: "My subtitle if needed"
author: 
  - Kevin Cai
thanks: "Code and data are available at: [https://github.com/kevicai/toronto-healthcare-outbreak-prediction](https://github.com/kevicai/toronto-healthcare-outbreak-prediction)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(knitr)
```


# Introduction {#sec-intro}

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....


# Data {#sec-data}

## Overview

This report uses the Outbreaks in Toronto Healthcare Institutions dataset, contains data from January 2016 to November 2024. The dataset is provided by Toronto Public Health, through City of Toronto Open Data Portal [@datasource]. The dataset tracks reported outbreaks of gastroenteric and respiratory illnesses in Toronto healthcare institutions and contains detailed information on outbreak settings, causative agents, and outbreak durations. Following the principles from Telling Stories with Data [@textbook], we examine how the characteristics of outbreaks, such as the type of healthcare institution, the causative agent, and the month the outbreak began, influence their durations. A sample of the cleaned dataset is shown in @tbl-cleaned. 

```{r, message = FALSE, echo = FALSE}
#| label: tbl-cleaned
#| tbl-cap: "Sample of Cleaned Outbreaks in Toronto Healthcare Institution Data"
data <- read.csv(here::here("data/02-analysis_data/analysis_data.csv"))
head(data, 5) |>
    kable(col.names = c("Outbreak Setting", "Causative Agent", "Month", "Outbreak Duration"))
```

There is 5387 observations in the orginal dataset and 1119 observations were removed that contained missing, invalid, or irrelivant data of the variables we're interested in. The data was first downloaded using `Python` [@citePython] and cleaned with the `pandas` package [@citePandas]. The cleaning process involved converting dates to a standardized datetime format, creating a "duration" variable representing the length of each outbreak, and extracting the month of the outbreak's start. Irrelevant columns were removed, and variables were renamed for clarity. Causative agents were grouped into broader categories, and rows with missing or invalid data were removed, including those with unidentifiable causative agents or certain outbreak settings. The final dataset was saved for further analysis.

`R` [@citeR] is used for the generation of figures, graphs, and tables throughout this paper. Specifically, the `rstanarm` package [@rstanarm] was employed to fit the model. For data manipulation, the `dplyr` package [@dplyr] was utilized to clean and transform the data efficiently. The `caret` package [@caret] was used for model training, while `modelsummary` [@modelsummary] was used to produce concise tables summarizing the model output. The `loo` package [@loo] was used to perform leave-one-out cross-validation, which helped assess the modelâ€™s predictive performance.

## Measurement
	
The data was primarily collected through mandatory reporting by healthcare institutions to Toronto Public Health under the Ontario Health Protection and Promotion Act (HPPA). Reports of suspected or confirmed outbreaks include both gastroenteric and respiratory illnesses. These reports are based on active monitoring by institutional staff, who observe and document signs and symptoms such as nausea, vomiting, fever, cough, or sore throat.

Some details, such as the causative agent group, may initially be unconfirmed and later identified through laboratory tests or clinical evaluations. However, these identifications are not always definitive. For instance, "Coronavirus*" in the dataset refers to seasonal coronaviruses, which are commonly implicated in respiratory outbreaks, and does not include COVID-19.

The unit of measurement for outbreak duration is in days. Other data fields, such as outbreak setting and causative agent group, are categorical features without numerical units. The dataset is updated weekly, ensuring it reflects the most recent outbreak data available.

## Outcome variable

### Duration
The Duration variable is numerical and indicates the total number of days each outbreak lasted. This reflects the severity and magnitude of the outbreak. It is constructed from the dataset by calculating the difference between the outbreak start and end dates.

```{r, message = FALSE, echo = FALSE}
#| label: fig-duration
#| fig-cap: "Distribution of Outbreak Duration"
ggplot(data, aes(x = duration)) +
  geom_histogram(fill = "steelblue", binwidth = 5, alpha = 0.8) +
  labs(
    x = "Duration (Days)",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 10)
  )
```

Longer outbreak durations may indicate challenges in containment, possibly influenced by the Outbreak Setting and Causative Agent.

## Predictor variables

### Outbreak Setting
The Outbreak Setting variable is categorical and identifies the type of healthcare institution where the outbreak occurred, such as hospitals, long-term care homes (LTCH), or retirement homes. It provides insights into the environments most affected by outbreaks.

@fig-setting-count illustrates the count of outbreaks across different settings in the dataset. 

```{r, message = FALSE, echo = FALSE}
#| label: fig-setting-count
#| fig-cap: "Outbreak occurrence in healthcare settings"
outbreak_setting_count <- data %>%
  count(outbreak_setting, name = "count") %>%
  mutate(percentage = (count / sum(count)) * 100) %>%
  arrange(desc(count))

# Bar graph for Outbreak Setting
ggplot(outbreak_setting_count, aes(x = reorder(outbreak_setting, -count), y = count)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_text(aes(label = sprintf("%.1f%%", percentage)), hjust = -0.1, size = 3) +
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.2))) + # Add right padding
  coord_flip() + 
  labs(
    x = "Outbreak Setting",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 10)
  )
```

LTCH (Long-Term Care Homes) accounts for a significant portion of outbreaks, likely due to the vulnerability of their populations. Comparing the frequency of outbreaks across settings can reveal risk patterns.

### Causative Agent
The Causative Agent variable is categorical and reflects the infectious agents responsible for outbreaks. While the original dataset contains 55 agents, they are grouped into seven broader categories to simplify the analysis and enhance interpretability.

@fig-agent-count illustrates the count and percentage distribution of causative agents in the dataset.

```{r, message = FALSE, echo = FALSE}
#| label: fig-agent-count
#| fig-cap: "Outbreak causative agent count and percentage"
outbreak_agent_count <- data %>%
  count(causative_agent, name = "count") %>%
  mutate(percentage = (count / sum(count)) * 100) %>%
  arrange(desc(count))

# Bar graph for Causative Agents
ggplot(outbreak_agent_count, aes(x = reorder(causative_agent, -count), y = count)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_text(aes(label = sprintf("%.1f%%", percentage)), hjust = -0.1, size = 3) +
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.2))) + # Add right padding
  coord_flip() +
  labs(
    x = "Causative Agent",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 10),
    plot.margin = margin(1, 1.2, 1, 1, "cm")
  )
```

### Month Outbreak Began
The Month variable is numerical and records the calendar month when each outbreak started. It reflects seasonal trends and potential patterns in infection rates. This variable is extracted from the date where each outbreak began from the original dataset. 

@fig-month shows the the occurance of outbreaks in each month, with winter months having siginifiantly more outbreaks compared to other months. This suggest that seasons have effects on outbreak occurances.

@fig-month-duration the boxplot visualizes the distribution of outbreak durations for each month. While winter months have a higher frequency of outbreaks, the duration of these outbreaks appears similar across all months, with no distinct seasonal differences in median or variability of duration.

```{r, message = FALSE, echo = FALSE}
#| label: fig-month
#| fig-cap: "Seasonal trends in outbreak occurrence and percentage"
outbreak_month_count <- data %>%
  count(month, name = "count") %>%
  arrange(desc(month))

ggplot(outbreak_month_count, aes(x = month, y = count)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(
    x = "Month",
    y = "Count"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 10)
  )
```

```{r, message = FALSE, echo = FALSE}
#| label: fig-month-duration
#| fig-cap: "Duration of outbreaks across different months"
library(ggplot2)

# Scatter plot for month vs. duration
ggplot(data, aes(x = as.factor(month), y = duration)) +
  geom_boxplot(fill = "steelblue", alpha = 0.7) +
  labs(
    x = "Month",
    y = "Duration (days)",
    title = "Duration of Outbreaks Across Months"
  ) +
  theme_minimal() +
  theme(
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 10),
    plot.title = element_text(size = 12, face = "bold")
  )
```

# Model

## Model Overview

To better understand the factors influencing the duration of outbreaks in Toronto healthcare facilities, a statistical model was developed using the negative binomial regression framework. This model was chosen because the outcome variable of interest, outbreak duration, is a count variable with evidence of overdispersionâ€”where the variance exceeds the mean [@textbook]. Additionally, this model was Bayesian, meaning the parameters were treated as random variables with prior probability distributions reflecting initial beliefs about their values before considering the data.

Both models were implemented  using the `rstanarm` package.

## Model Setup

The setup for the Bayesian Negative Binomial regression model used in this analysis is as follows:

\begin{align} 
y_i | \lambda_i &\sim \text{Negative Binomial}(\lambda_i, \phi) \\
\log(\lambda_i) &= \beta_0 + \beta_1 \times \text{outbreak\_setting}_i + \beta_2 \times \text{causative\_agent}_i + \beta_3 \times \text{month}_i \\
\beta_0 &\sim \text{Normal}(0, 2.5) \\
\beta_1 &\sim \text{Normal}(0, 2.5) \\
\beta_2 &\sim \text{Normal}(0, 2.5) \\
\beta_3 &\sim \text{Normal}(0, 2.5) \\
\phi &\sim \text{Exponential}(1)
\end{align}

In the above model:

- $\mu_i$ is the predicted duration of the outbreak $i$ in days.
- $\lambda_i$ is the expected duration of outbreak $i$, modeled through a **log link**.
- $\beta_0$ is the intercept term.
- $\beta_1$ is the coefficient for the **outbreak setting**.
- $\beta_2$ is the coefficient for the **causative agent**.
- $\beta_3$ is the coefficient for the **month** when the outbreak started.
- $\phi$ is the **dispersion parameter** that controls the degree of overdispersion in the Negative Binomial distribution.

- All coefficients ($\beta_0, \beta_1, \beta_2, \beta_3$) are assigned **Normal(0, 2.5)** priors.
- The dispersion parameter $\phi$ is assigned an **Exponential(1)** prior, reflecting a non-informative prior belief about the variance.

## Model Selection

```{r, message = FALSE, echo = FALSE}
#| label: load-models
library(rstanarm)#| 

poisson_model <-
    readRDS(file = here::here("models/poisson_model.rds"))
neg_binom_model <- 
    readRDS(file = here::here("models/neg_binomial_model.rds"))
```

Both Negative Binomial model and Poisson model was constructed using rstanarm for the dataset. Negative Binomial model was chosen over the Poisson model as overall it was better at effectively predicting the  because it performed better in terms of the expected log pointwise predictive density (ELPD). We found that the Negative Binomial model has a larger ELPD, indicating that it provides a better fit to the data.

## Model Diagnostics and Validation

We performed several model validation checks to assess the adequacy of both models.

# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

# modelsummary::modelsummary(
#     list(
#         "Model" = model
#     ),
#     statistic = "mad",
#     fmt = 2
# )
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Outcome Variable Variance and Mean 

## Posterior predictive check

In @fig-ppchecks, using code adapted from @textbook, posterior prediction checks were performed for both the Poisson model and the Negative Binomial model. The figure show how well the model is able to predict the observed outcomes.

```{r, message = FALSE, echo = FALSE}
#| label: fig-ppchecks
#| layout-ncol: 2
#| fig-cap: "Comparing posterior prediction checks for the Poisson model and the Negative Binomial model"
#| fig-subcap: ["Poisson model posterior prediction check", "Negative Binomial model posterior prediction check"]
pp_check(poisson_model) +
  theme_classic() +
  theme(legend.position = "bottom")

pp_check(neg_binom_model) +
  theme_classic() +
  theme(legend.position = "bottom")
```

## Diagnostics

<!-- ```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(model, "trace")

plot(model, "rhat")
``` -->



\newpage


# References


